name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [9.0.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Cache .NET packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --no-restore --configuration Release

    - name: Run backend tests
      run: dotnet test Backend.Tests/Backend.Tests.csproj --no-build --verbosity normal

    - name: Run frontend tests
      run: dotnet test Frontend.Tests/Frontend.Tests.csproj --no-build --verbosity normal

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: '**/TestResults/**/*.trx'

  # deploy-backend:
  #   name: Deploy Backend to Azure App Service
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Login to Azure
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS }}

  #   - name: Deploy to Azure App Service
  #     uses: azure/webapps-deploy@v2
  #     with:
  #       app-name: 'your-backend-app-name'
  #       slot-name: 'production'
  #       package: ./Backend/bin/Release/net9.0/publish

  # deploy-frontend:
  #   name: Deploy Frontend to Azure Static Web Apps
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Build frontend
  #     run: |
  #       cd Frontend
  #       dotnet publish -c Release -o build

  #   - name: Deploy to Azure Static Web Apps
  #     uses: Azure/static-web-apps-deploy@v1
  #     with:
  #       action: 'upload'
  #       app_location: './Frontend/build'
  #       api_location: ''
  #       output_location: ''
  #       azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}